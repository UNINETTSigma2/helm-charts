apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  annotations:
    appstore.uninett.no/contact_email: {{ .Values.appstore_generated_data.appstore_meta_data.contact_email }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: passwd
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: passwd
              path: passwd
        - name: group
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: group
              path: group
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 256M
        - name: gitea-config
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: app.ini
              path: app.ini
      {{- if ne (first .Values.persistentStorage).existingClaim "" }}
        {{- range .Values.persistentStorage }}
        - name: {{ .existingClaimName }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim }}
        {{- end }}
      initContainers:
      - name: busybox
        image: busybox:1.33.1-glibc
        securityContext:
          runAsUser: {{ .Values.uid }}
          runAsGroup: {{ .Values.gid }}
        args:
          - /bin/sh
          - -c
          - -x
          - "mkdir -p /mnt/{{ (first .Values.persistentStorage).existingClaimName }}/{{ template "fullname" . }} && chmod g+w /mnt/{{ (first .Values.persistentStorage).existingClaimName }}/{{ template "fullname" . }}"
        volumeMounts:
        - name: {{ (first .Values.persistentStorage).existingClaimName }}
          mountPath: /mnt/{{ (first .Values.persistentStorage).existingClaimName }}
          mountPropagation: HostToContainer
      {{ end }}
      hostname: {{ template "fullname" . }}
      securityContext:
        runAsNonRoot: true
        fsGroup: {{ .Values.gid }}
        {{ $firstGroup := .Values.supplementalGroups | first }}
        {{- if $firstGroup.gid }}
        supplementalGroups:
          {{- range .Values.supplementalGroups }}
          - {{ .gid }}
          {{- end }}
        {{- end }}
      containers:
      - name: gitea
        image: {{ .Values.advanced.dockerImage }}
        env:
          - name: TZ
            value: Europe/Oslo
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: 3000
        securityContext:
          runAsUser: {{ .Values.uid }}
          runAsGroup: {{ .Values.gid }}
        volumeMounts:
        {{- if ne (first .Values.persistentStorage).existingClaim "" }}
        {{- range .Values.persistentStorage }}
        - name: {{ .existingClaimName }}
          mountPath: /mnt/{{ .existingClaimName }}
          mountPropagation: HostToContainer
          {{ if ne .subPath "/" }}
          subPath: {{ .subPath }}
          {{ end }}
        {{- end }}
        {{- end }}
        - name: gitea-config
          mountPath: /etc/gitea/conf
          mountPropagation: HostToContainer
        - name: passwd
          mountPath: /etc/passwd
          subPath: passwd
        - name: group
          mountPath: /etc/group
          subPath: group
        - name: shm
          mountPath: /dev/shm

