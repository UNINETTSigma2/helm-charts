apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-worker
  annotations:
    appstore.uninett.no/contact_email: {{ .Values.appstore_generated_data.appstore_meta_data.contact_email }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.advanced.workers.replicas }}
  selector:
    matchLabels:
        app: {{ template "fullname" . }}-worker
        group: {{ template "fullname" . }}
        release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        appstore.uninett.no/contact_email: {{ .Values.appstore_generated_data.appstore_meta_data.contact_email }}
      labels:
        group: {{ template "fullname" . }}
        app: {{ template "fullname" . }}-worker
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      volumes:
        - name: passwd
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: passwd
              path: passwd
        - name: group
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: group
              path: group
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 256M
      {{- if ne (first .Values.persistentStorage).existingClaim "" }}
        {{- range .Values.persistentStorage }}
        - name: {{ .existingClaimName }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim }}
            {{- if hasKey . "readOnly" }}
            readOnly: {{ .readOnly }}
            {{- end }}
        {{- end }}
      {{ end }}
      securityContext:
        runAsNonRoot: true
        fsGroup: {{ .Values.gid }}
        {{ $firstGroup := .Values.supplementalGroups | first }}
        {{- if $firstGroup.gid }}
        supplementalGroups:
          {{- range .Values.supplementalGroups }}
          - {{ .gid }}
          {{- end }}
        {{- end }}
      containers:
        - name: spark-worker
          image: {{ .Values.advanced.dockerImage }}
          imagePullPolicy: IfNotPresent
          args: ["/usr/local/bin/start-worker.sh"]
          env:
            - name: SPARK_PUBLIC_DNS
              value: {{ .Values.ingress.host }}
            - name: SPARK_WORKER_MEMORY
              value: {{ .Values.advanced.workers.resources.requests.memory }}
            - name: SPARK_WORKER_CORES
              value: {{ .Values.advanced.workers.resources.requests.cpu | quote }}
            - name: OWNER_ID
              value: {{ .Values.appstore_generated_data.aai.owner }}
            - name: SPARK_MASTER_SERVICE_HOST
              value: {{ template "fullname" . }}-master
          ports:
            - containerPort: 8081
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            runAsUser: {{ .Values.uid }}
            runAsGroup: {{ .Values.gid }}
          resources:
            requests:
                cpu: {{ .Values.advanced.workers.resources.requests.cpu }}
                memory: {{ .Values.advanced.workers.resources.requests.memory }}
            limits:
                cpu: {{ .Values.advanced.workers.resources.limits.cpu }}
                memory: {{ .Values.advanced.workers.resources.limits.memory }}
          volumeMounts:
          - name: passwd
            mountPath: /etc/passwd
            subPath: passwd
          - name: group
            mountPath: /etc/group
            subPath: group
          - name: shm
            mountPath: /dev/shm
          {{- if ne (first .Values.persistentStorage).existingClaim "" }}
          {{- range .Values.persistentStorage }}
          - name: {{ .existingClaimName }}
            mountPath: /mnt/{{ .existingClaimName }}
            mountPropagation: HostToContainer
            {{ if ne .subPath "/" }}
            subPath: {{ .subPath }}
            {{ end }}
          {{- end }}
          {{- end }}
